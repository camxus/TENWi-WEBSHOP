{"ast":null,"code":"import _defineProperty from \"/Users/cam/Desktop/VS CODE/CURRENT TENWI PROJECT/TENWi-WEBSHOP/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/cam/Desktop/VS CODE/CURRENT TENWI PROJECT/TENWi-WEBSHOP/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/cam/Desktop/VS CODE/CURRENT TENWI PROJECT/TENWi-WEBSHOP/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport client from \"../components/ApolloClient\";\nimport GET_STATES from \"../queries/get-states\";\n/**\n * Get states\n *\n * @param {String} countryCode Country code\n *\n * @returns {Promise<void>}\n */\n\nexport var getStates = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(countryCode) {\n    var _data$wooStates$state, _data$wooStates;\n\n    var _yield$client$query, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return client.query({\n              query: GET_STATES,\n              variables: {\n                countryCode: countryCode || ''\n              }\n            });\n\n          case 2:\n            _yield$client$query = _context.sent;\n            data = _yield$client$query.data;\n            return _context.abrupt(\"return\", (_data$wooStates$state = data === null || data === void 0 ? void 0 : (_data$wooStates = data.wooStates) === null || _data$wooStates === void 0 ? void 0 : _data$wooStates.states) !== null && _data$wooStates$state !== void 0 ? _data$wooStates$state : []);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getStates(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Set states for the country.\n *\n * @param {Object} target Target.\n * @param {Function} setTheStates React useState function to set the value of the states basis country selection.\n * @param {Function} setIsFetchingStates React useState function, to manage loading state when request is in process.\n *\n * @return {Promise<void>}\n */\n\nexport var setStatesForCountry = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(target, setTheStates, setIsFetchingStates) {\n    var countryCode, states;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!('country' === target.name)) {\n              _context2.next = 8;\n              break;\n            }\n\n            setIsFetchingStates(true);\n            countryCode = target[target.selectedIndex].getAttribute('data-countrycode');\n            _context2.next = 5;\n            return getStates(countryCode);\n\n          case 5:\n            states = _context2.sent;\n            setTheStates(states || []);\n            setIsFetchingStates(false);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function setStatesForCountry(_x2, _x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var handleBillingDifferentThanShipping = function handleBillingDifferentThanShipping(input, setInput, target) {\n  var newState = _objectSpread(_objectSpread({}, input), {}, _defineProperty({}, target.name, !input.billingDifferentThanShipping));\n\n  setInput(newState);\n};\nexport var handleCreateAccount = function handleCreateAccount(input, setInput, target) {\n  var newState = _objectSpread(_objectSpread({}, input), {}, _defineProperty({}, target.name, !input.createAccount));\n\n  setInput(newState);\n};","map":null,"metadata":{},"sourceType":"module"}