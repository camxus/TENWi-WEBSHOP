{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Img from 'next/image';\nimport cx from 'classnames';\nimport { DEFAULT_IMG_URL } from \"../constants/urls\";\n/**\n * Image Component.\n * We don't need to add srcSet, as Next js will generate that.\n * @see https://nextjs.org/docs/api-reference/next/image#other-props\n * @see https://nextjs.org/docs/basic-features/image-optimization#device-sizes\n *\n * @param {Object} props Component props.\n *\n * @return {jsx}\n */\n\nconst Image = props => {\n  const {\n    altText,\n    title,\n    width,\n    height,\n    sourceUrl,\n    className,\n    layout,\n    objectFit,\n    containerClassNames,\n    showDefault,\n    defaultImgUrl\n  } = props,\n        rest = _objectWithoutProperties(props, [\"altText\", \"title\", \"width\", \"height\", \"sourceUrl\", \"className\", \"layout\", \"objectFit\", \"containerClassNames\", \"showDefault\", \"defaultImgUrl\"]);\n\n  if (!sourceUrl && !showDefault) {\n    return null;\n  }\n  /**\n   * If we use layout = fill then, width and height of the image cannot be used.\n   * and the image fills on the entire width and the height of its parent container.\n   * That's we need to wrap our image in a container and give it a height and width.\n   * Notice that in this case, the given height and width is being used for container and not img.\n   */\n\n\n  if ('fill' === layout) {\n    const attributes = _objectSpread({\n      alt: altText || title,\n      src: sourceUrl || (showDefault ? defaultImgUrl || DEFAULT_IMG_URL : ''),\n      layout: 'fill',\n      className: cx('object-cover', className)\n    }, rest);\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: cx('relative', containerClassNames),\n      children: /*#__PURE__*/_jsx(Img, _objectSpread({}, attributes))\n    });\n  } else {\n    const attributes = _objectSpread({\n      alt: altText || title,\n      src: sourceUrl || (showDefault ? DEFAULT_IMG_URL : ''),\n      width: width || 'auto',\n      height: height || 'auto',\n      className\n    }, rest);\n\n    return /*#__PURE__*/_jsx(Img, _objectSpread({}, attributes));\n  }\n};\n\nImage.defaultProps = {\n  altText: '',\n  title: '',\n  sourceUrl: '',\n  showDefault: true,\n  defaultImgUrl: '',\n  containerClassNames: '',\n  className: 'post__image'\n};\nexport default Image;","map":null,"metadata":{},"sourceType":"module"}